plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.6'
    id "org.sonarqube" version "5.0.0.4638"
}

bootJar.enabled = false

repositories {
    mavenCentral()
}

subprojects { // 모든 하위 모듈들에 이 설정을 적용합니다.
    group 'com.personal'
    version '0.0.1-SNAPSHOT'
    sourceCompatibility = '17'

    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.sonarqube'

    sonar {
        properties {
            property 'sonar.java.binaries', "${buildDir}/classes"
            // jacoco-aggregation을 사용하지 않은 경우 각 프로젝트의 buildDir마다 따로 적용
            property 'sonar.coverage.jacoco.xmlReportPaths', "${buildDir}/reports/jacoco.xml"
        }
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies { // 모든 하위 모듈에 추가 될 의존성 목록입니다.
        // lombok
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    test {
        useJUnitPlatform()
    }
}

def jacocoExcludePatterns = [
        // 측정 안하고 싶은 패턴
        "**/Q*.java",
        "**/*Application*",
        "**/*Config*",
        "**/*Aop*",
        "**/*Exception*",
        "**/*Request*",
        "**/*Response*",
        "**/*Dto*",
        "**/*Interceptor*",
        "**/*Filter*",
        "**/*Resolver*",
        "**/*Entity*",
        "**/test/**",
        "**/resources/**"
]

sonar {
    properties {
        property "sonar.projectKey", "ballqs_spring-task"
        property "sonar.organization", "ballqs"
        property "sonar.host.url", "https://sonarcloud.io"
        property 'sonar.sources', 'src'
        property 'sonar.language', 'java'
        property 'sonar.sourceEncoding', 'UTF-8'
        property "sonar.profile", "Sonar way"
        property 'sonar.test.inclusions', '**/*Test.java'
        property 'sonar.exclusions', jacocoExcludePatterns.join(',')
        property 'sonar.java.coveragePlugin', 'jacoco'
    }
}